1. BST = Binary Search Tree
2. Heap

1. 
Binary tree = 자식 vertex가 최대 2개인 tree.
BST = 이진 탐색의 특징을 가진 트리, 왼쪽 자식은 부모보다 항상 작은 값을 가지고, 오른쪽 자식은 항상 크다.
특정 노드를 O(logN)만에 찾고, 추가와 삭제도 O(logN)에 가능하다.

사실, 삽입 순서에 따라 BST가 편향될 경우 O(N)이 걸릴 수 있다. (오름차순이나 내림차순으로 입력되는 경우!) 
Blanced Tree라고 하는 것은 편향되지 않도록 보장되는 트리. -> red-block tree, B-tree, splay-tree 등이 있다.

2.
Heap = 우선순위 큐
Heap: 최소, 혹은 최대 값을 O(1)만에 찾을 수 있는 구조. 삽입과 삭제는 O(logN)이 걸린다.
heap은 tree 형태의 자료구조로써, python에서 다음과 같이 구현이 가능하다.

from queue import PrioriyQueue
pq = PrioriyQueue()
pq.put(5) 
pq.get() # pop과 같음



